trigger: none

pool:
  name: 'Local-Linux'

variables:
  buildId: $(Build.BuildId)
  frontend_image: frontend-app:$(buildId)
  backend_image: backend-app:$(buildId)

steps:
# Checkout source code
- checkout: self

# Build Maven JARs
- task: Maven@3
  displayName: 'Build frontend and backend JARs'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package -DskipTests'
    options: '-B'  # Batch mode for CI logs

# Build frontend Docker image
- task: Docker@2
  displayName: 'Build frontend Docker image'
  inputs:
    command: 'build'
    buildContext: 'frontend'
    dockerfile: ''  # Inline Dockerfile
    arguments: |
      -f- <<EOF
      FROM eclipse-temurin:8-jre
      WORKDIR /app
      COPY target/*.jar app.jar
      EXPOSE 8080
      ENTRYPOINT ["java","-jar","app.jar"]
      EOF
    tags: '$(frontend_image)'

# Push frontend to ACR
- task: Docker@2
  displayName: 'Push frontend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'  # Service connection
    repository: 'frontend-app'
    tags: '$(buildId)'

# Push frontend to Docker Hub
- task: Docker@2
  displayName: 'Push frontend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection'  # Service connection
    repository: 'frontend-app'
    tags: '$(buildId)'

# Build backend Docker image
- task: Docker@2
  displayName: 'Build backend Docker image'
  inputs:
    command: 'build'
    buildContext: 'backend'
    dockerfile: ''
    arguments: |
      -f- <<EOF
      FROM eclipse-temurin:8-jre
      WORKDIR /app
      COPY target/*.jar app.jar
      EXPOSE 8081
      ENTRYPOINT ["java","-jar","app.jar"]
      EOF
    tags: '$(backend_image)'

# Push backend to ACR
- task: Docker@2
  displayName: 'Push backend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'
    repository: 'backend-app'
    tags: '$(buildId)'

# Push backend to Docker Hub
- task: Docker@2
  displayName: 'Push backend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection'
    repository: 'backend-app'
    tags: '$(buildId)'
