trigger: none

pool:
  name: 'Local-Linux'

variables:
  image_tag: $(Build.BuildId)
  frontend_image_name: frontend-app
  backend_image_name: backend-app

steps:
# Checkout source code
- checkout: self

# Build frontend and backend JARs
- task: Maven@3
  displayName: 'Build frontend and backend JARs'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package -DskipTests'

# Build frontend Docker image
- task: Docker@2
  displayName: 'Build frontend Docker image'
  inputs:
    command: 'build'
    buildContext: 'frontend'
    dockerfile: 'frontend/Dockerfile'
    tags: '$(frontend_image_name):$(image_tag)'

# Push frontend to ACR
- task: Docker@2
  displayName: 'Push frontend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'       # Azure service connection
    repository: 'frontend-app'
    tags: '$(image_tag)'

# Push frontend to Docker Hub
- task: Docker@2
  displayName: 'Push frontend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection' # Docker Hub service connection
    repository: 'frontend-app'
    tags: '$(image_tag)'

# Build backend Docker image
- task: Docker@2
  displayName: 'Build backend Docker image'
  inputs:
    command: 'build'
    buildContext: 'backend'
    dockerfile: 'backend/Dockerfile'
    tags: '$(backend_image_name):$(image_tag)'

# Push backend to ACR
- task: Docker@2
  displayName: 'Push backend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'
    repository: 'backend-app'
    tags: '$(image_tag)'

# Push backend to Docker Hub
- task: Docker@2
  displayName: 'Push backend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection'
    repository: 'backend-app'
    tags: '$(image_tag)'
