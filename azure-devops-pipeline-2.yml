trigger: none

pool:
  name: 'Local-Linux'

variables:
  # Registries
  acrRegistry: sacdockerzure.azurecr.io
  dockerhubRegistry: smakavan

  # Unique build tag
  image_tag: $(Build.BuildId)

  # Full image names
  frontend_image_acr: $(acrRegistry)/frontend-app:$(image_tag)
  frontend_image_dockerhub: $(dockerhubRegistry)/frontend-app:$(image_tag)
  backend_image_acr: $(acrRegistry)/backend-app:$(image_tag)
  backend_image_dockerhub: $(dockerhubRegistry)/backend-app:$(image_tag)

steps:
- checkout: self

# 1️⃣ Build Maven JARs
- task: Maven@3
  displayName: 'Build frontend and backend JARs'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package -DskipTests'

# 2️⃣ Build frontend Docker image with tags for both registries
- task: Docker@2
  displayName: 'Build frontend Docker image'
  inputs:
    command: 'build'
    buildContext: 'frontend'
    dockerfile: 'frontend/Dockerfile'
    tags: '$(frontend_image_acr),$(frontend_image_dockerhub)'

# 3️⃣ Push frontend to ACR
- task: Docker@2
  displayName: 'Push frontend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'       # Azure service connection to ACR
    repository: 'frontend-app'
    tags: '$(image_tag)'

# 4️⃣ Push frontend to Docker Hub
- task: Docker@2
  displayName: 'Push frontend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection' # Docker Hub service connection
    repository: 'frontend-app'
    tags: '$(image_tag)'

# 5️⃣ Build backend Docker image with tags for both registries
- task: Docker@2
  displayName: 'Build backend Docker image'
  inputs:
    command: 'build'
    buildContext: 'backend'
    dockerfile: 'backend/Dockerfile'
    tags: '$(backend_image_acr),$(backend_image_dockerhub)'

# 6️⃣ Push backend to ACR
- task: Docker@2
  displayName: 'Push backend to ACR'
  inputs:
    command: 'push'
    containerRegistry: 'ACR-Connection'
    repository: 'backend-app'
    tags: '$(image_tag)'

# 7️⃣ Push backend to Docker Hub
- task: Docker@2
  displayName: 'Push backend to Docker Hub'
  inputs:
    command: 'push'
    containerRegistry: 'DockerHub-Connection'
    repository: 'backend-app'
    tags: '$(image_tag)'
